#!/usr/bin/env groovy
// shebang tells most editors to treat as groovy (syntax highlights, formatting, etc)

pipeline {
    agent any
//	environment {
//		CI = true
//		ARTIFACTORY_ACCESS_TOKEN = credentials('artifactory-access-token')
//	}
	
	parameters {
        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')
        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
        choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')
        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }
	
    stages {
        // implicit checkout stage

        stage('Build') {
            steps {
                sh './mvnw clean package'
            }
        }
		
//		stage('Upload to Artifactory') {
//			agent {
//				docker {
//					image 'releases-docker.jfrog.io/jfrog/jfrog-cli-v2:2.2.0' 
//					reuseNode true
//				}
//			}
//			steps {
//				sh 'jfrog rt upload --url http://127.0.0.1:8380/artifactory/ --access-token ${ARTIFACTORY_ACCESS_TOKEN} target/spring-petclinic-2.3.1.BUILD-SNAPSHOT.jar hestia-demo-generic/'
//			}
//		}
    }
	
    // post after stages, for entire pipeline, is also an implicit step albeit with explicit config here, unlike implicit checkout stage
    post {
        always {
            junit '**/target/surefire-reports/TEST-*.xml'
            archiveArtifacts 'target/*.jar'
        }
    }
}